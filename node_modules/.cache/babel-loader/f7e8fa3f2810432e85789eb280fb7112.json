{"ast":null,"code":"var _jsxFileName = \"F:\\\\A Learning\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseChart = props => {\n  return chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Chart","ExpenseChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["F:/A Learning/react-complete-guide/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  return chartDataPoints = [\r\n      {label: 'Jan', value: 0 },\r\n      {label: 'Feb', value: 0 },\r\n      {label: 'Mar', value: 0 },\r\n      {label: 'Apr', value: 0 },\r\n      {label: 'May', value: 0 },\r\n      {label: 'Jun', value: 0 },\r\n      {label: 'Jul', value: 0 },\r\n      {label: 'Aug', value: 0 },\r\n      {label: 'Sep', value: 0 },\r\n      {label: 'Oct', value: 0 },\r\n      {label: 'Nov', value: 0 },\r\n      {label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense in props.expenses){\r\n      const expenseMonth = expense.date.getMonth();\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints = {chartDataPoints}/>\r\n};\r\n\r\nexport default ExpenseChart;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,OAAOC,eAAe,GAAG,CACrB;IAACC,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CADqB,EAErB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CAFqB,EAGrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CAHqB,EAIrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CAJqB,EAKrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CALqB,EAMrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CANqB,EAOrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CAPqB,EAQrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CARqB,EASrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CATqB,EAUrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CAVqB,EAWrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CAXqB,EAYrB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAE;EAAtB,CAZqB,CAAzB;;EAeA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,QAA5B,EAAqC;IACjC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB;IACAP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAuCC,OAAO,CAACK,MAA/C;EACH;;EAED,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAIR;EAArB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAtBD;;KAAMF,Y;AAwBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}